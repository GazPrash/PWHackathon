import openai
import gradio 
from model.sentiment_analysis import analyze


openai.api_key = "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"

messages = [{"role": "system", "content": "You are sassy youngster"}]

count = 0
result = ""
user_replies = []
descpr = """This is Dr. TherapyBot, an AI chatbot programmed to engage in conversation with you and then analyze your feelings based on your real time resoponses. It can provide you with a detailed report on your emotional state, including positive and negative emotions, intensity, and patterns over time. Whether you want to reflect on your day, vent about something bothering you, or just engage in a friendly chat, this chatbot is here to help you gain insights into your emotions and achieve greater self-awareness. 

(Make 5 conversations with the bot to get the results of the analysis)

So, start a conversation by telling us what was your last happy moment?"""

article = """This responses are generated by an AI Chatbot and the predictions on the sentiment analysis were done using a Naive Bayes Machine Learning algorithm. Made by Prashant & Abhijeet."""


def CustomChatGPT(user_input):
    messages.append({"role": "user", "content": "Continue the conversation being 'thera' and asking a leading follow up question at the end to whatever the input is. Do not complete the given 'Input'.          Alex: It really is a good day bruv, how you feeling today. Input: Not bad. The world seems crazy.  Alex:Ayyo, its yo boi thera. I know how wild this world could be, but you know I'm always here for you. Let's start with sharing some stories, what was your last happy moment? Input: " + user_input})
    response = openai.ChatCompletion.create(
        model = "gpt-3.5-turbo",
        messages = messages 
    )
    ChatGPT_reply = response["choices"][0]["message"]["content"]
    messages.append({"role": "assistant", "content": ChatGPT_reply})
    return ChatGPT_reply


def chatbot(input, history=[]):
    global count
    count += 1
    user_replies.append(input)

    if count == 5:
        result = analyze(user_replies)
        history.append((input, result))
        return history, history

    output = CustomChatGPT(input)
    history.append((input, output))
    
    return history, history

gradio.Interface(fn = chatbot,
             inputs = ["text",'state'],
             outputs = ["chatbot",'state'],  title = "Dr.TherapyBot", description = descpr, article = article).launch(share = True, debug = True)